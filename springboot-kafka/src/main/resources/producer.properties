#初始化时建立链接到kafka集群
bootstrap.servers=kafka01:30001,kafka02:30002,kafka03:30003,kafka04:30004,kafka05:30005,kafka06:30006,kafka07:30007,kafka08:30008,kafka09:30009
#broker希望接收到的消息的键和值都是字节数组
key.serializer=org.apache.kafka.common.serialization.StringSerializer
#指定的类会将值序列化
value.serializer=org.apache.kafka.common.serialization.StringSerializer
#acks=0 配置适用于实现非常高的吞吐量，acks=all这是最安全的模式
#ACK有三种：
#0：意味着producer不等待broker同步完成的确认，继续发送下一条(批)信息，提供了最低的延迟。但是最弱的持久性，当服务器发生故障时，就很可能发生数据丢失。例如leader已经死亡，producer不知情，还会继续发送消息broker接收不到数据就会数据丢失
#1：意味着producer要等待leader成功收到数据并得到确认，才发送下一条message。此选项提供了较好的持久性较低的延迟性。Partition的Leader死亡，follwer尚未复制，数据就会丢失
#all：意味着producer得到follwer确认，才发送下一条数据
#SpringBoot对kafka自动配置对ack字段，如果没有配置acks则取默认值1
acks=1
#用户认证
security.protocol=SASL_PLAINTEXT
#配置SASL端口和SASL机制
sasl.kerberos.service.name=kafka

