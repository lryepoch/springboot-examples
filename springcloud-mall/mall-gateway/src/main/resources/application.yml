server:
  port: 8888

spring:
  application:
    name: mall-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    sentinel:   #sentinel控制台因为是懒加载的，所以需要先访问接口，才能在控制台上刷新出来
      transport:
        dashboard: localhost:8081 #指定控制台服务地址
        port: 8719 #跟控制台交流的端口，随意指定一个未使用的端口即可，默认为8719
      scg:  #scg.fallback为sentinel限流后的响应配置
        fallback:
          mode: response
          response-status: 455
          response-body: error!
    gateway:
      discovery:
        locator:
          enabled: true #让gateway可以发现注册中心的微服务，开启以服务id去注册中心上获取转发地址
          lower-case-service-id: true #使用小写service-id
      routes: #配置路由路径
        - id: order_route #路由id
          uri: lb://mall-order # 基于lb负载均衡形式转发（通过注册中心服务名称，获取真实访问地址）
          predicates: #匹配规则
            - Path=/api/order/**
            - Age=18,60
          filters:
            - RewritePath=/api/(?<segment>.*),/$\{segment}
            - Log=true,false  #自定义过滤器。表示开启consoleLog，不开启cacheLog。
        - id: product_route      #路由标识符，区别于其他Route
          uri: lb://mall-product #路由指向的目的地uri，即客户端请求最终被转发到的微服务
          predicates:            #断言的作用是进行条件判断，只有断言都返回真，才会真正的执行路由
            - Path=/api/product/**
          filters:               #过滤器用于修改请求和响应信息
            - RewritePath=/api/(?<segment>.*),/$\{segment}
